"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1656],{41656:function(n,r,e){e.r(r),r.default="# ActionSheet 动作面板\r\n\r\n## 基本用法\r\n\r\n```jsx\r\nimport { useState, useRef } from 'react';\r\nimport { ActionSheet, List, Button } from 'zarm';\r\n\r\nconst BUTTONS = [\r\n  {\r\n    text: 'Action 1',\r\n    onClick: () => console.log('Clicked action 1'),\r\n  },\r\n  {\r\n    theme: 'default',\r\n    text: 'Action 2',\r\n    onClick: () => console.log('Clicked action 2'),\r\n  },\r\n  {\r\n    theme: 'danger',\r\n    text: 'Action 3',\r\n    onClick: () => console.log('Clicked action 3'),\r\n  },\r\n  {\r\n    disabled: true,\r\n    text: 'Disabled Action',\r\n    onClick: () => console.log('Clicked disabled action'),\r\n  },\r\n];\r\n\r\nconst Demo = () => {\r\n  const containerRef = useRef();\r\n  const [visible1, setVisible1] = useState(false);\r\n  const [visible2, setVisible2] = useState(false);\r\n  const [visible3, setVisible3] = useState(false);\r\n  const [visible4, setVisible4] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <List.Item\r\n          title=\"普通\"\r\n          suffix={\r\n            <Button size=\"xs\" onClick={() => setVisible1(true)}>\r\n              开启\r\n            </Button>\r\n          }\r\n        />\r\n        <List.Item\r\n          title=\"带取消操作\"\r\n          suffix={\r\n            <Button size=\"xs\" onClick={() => setVisible2(true)}>\r\n              开启\r\n            </Button>\r\n          }\r\n        />\r\n        <List.Item\r\n          title=\"圆角、留边\"\r\n          suffix={\r\n            <Button size=\"xs\" onClick={() => setVisible3(true)}>\r\n              开启\r\n            </Button>\r\n          }\r\n        />\r\n        <List.Item\r\n          title=\"指定挂载节点\"\r\n          suffix={\r\n            <Button size=\"xs\" onClick={() => setVisible4(true)}>\r\n              开启\r\n            </Button>\r\n          }\r\n        />\r\n      </List>\r\n\r\n      <div ref={containerRef} />\r\n\r\n      <ActionSheet\r\n        visible={visible1}\r\n        actions={BUTTONS}\r\n        onMaskClick={() => setVisible1(!visible1)}\r\n      />\r\n      <ActionSheet\r\n        visible={visible2}\r\n        actions={BUTTONS}\r\n        onMaskClick={() => setVisible2(!visible2)}\r\n        onCancel={() => setVisible2(!visible2)}\r\n      />\r\n      <ActionSheet\r\n        spacing\r\n        visible={visible3}\r\n        actions={BUTTONS}\r\n        onMaskClick={() => setVisible3(!visible3)}\r\n        onCancel={() => setVisible3(!visible3)}\r\n      />\r\n      <ActionSheet\r\n        visible={visible4}\r\n        actions={BUTTONS}\r\n        onMaskClick={() => setVisible4(!visible4)}\r\n        mountContainer={containerRef.current}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## 异步操作\r\n\r\n```jsx\r\nimport { useState, useRef } from 'react';\r\nimport { ActionSheet, List, Button } from 'zarm';\r\n\r\nconst BUTTONS = [\r\n  {\r\n    text: 'Action 1',\r\n  },\r\n  {\r\n    text: 'Action 2',\r\n  },\r\n  {\r\n    theme: 'danger',\r\n    text: 'Action 3',\r\n  },\r\n  {\r\n    disabled: true,\r\n    text: 'Disabled Action',\r\n  },\r\n];\r\n\r\nconst Demo = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <List.Item\r\n          title=\"普通\"\r\n          suffix={\r\n            <Button size=\"xs\" onClick={() => setVisible(true)}>\r\n              开启\r\n            </Button>\r\n          }\r\n        />\r\n      </List>\r\n\r\n      <ActionSheet\r\n        visible={visible}\r\n        onMaskClick={() => setVisible(false)}\r\n        actions={BUTTONS}\r\n        onAction={async (action, index) => {\r\n          // 模拟异步操作\r\n          await new Promise((resolve) => setTimeout(resolve, 3000));\r\n          console.log(action);\r\n          setVisible(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## 指令式\r\n\r\n```jsx\r\nimport { ActionSheet, List, Button } from 'zarm';\r\n\r\nconst BUTTONS = [\r\n  {\r\n    text: 'Action 1',\r\n    onClick: () => console.log('Clicked action 1'),\r\n  },\r\n  {\r\n    theme: 'default',\r\n    text: 'Action 2',\r\n    onClick: () => console.log('Clicked action 2'),\r\n  },\r\n  {\r\n    theme: 'danger',\r\n    text: 'Action 3',\r\n    onClick: () => console.log('Clicked action 3'),\r\n  },\r\n  {\r\n    disabled: true,\r\n    text: 'Disabled Action',\r\n    onClick: () => console.log('Clicked disabled action'),\r\n  },\r\n];\r\n\r\nconst Demo = () => {\r\n  return (\r\n    <List>\r\n      <List.Item\r\n        title=\"普通\"\r\n        suffix={\r\n          <Button\r\n            size=\"xs\"\r\n            onClick={() => {\r\n              const { close } = ActionSheet.show({\r\n                spacing: true,\r\n                actions: BUTTONS,\r\n                onMaskClick: () => {\r\n                  close();\r\n                },\r\n                onCancel: () => {\r\n                  close();\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            开启\r\n          </Button>\r\n        }\r\n      />\r\n    </List>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## API\r\n\r\n| 属性           | 类型                                                                     | 默认值              | 说明                               |\r\n| :------------- | :----------------------------------------------------------------------- | :------------------ | :--------------------------------- |\r\n| visible        | boolean                                                                  | false               | 是否显示                           |\r\n| spacing        | boolean                                                                  | false               | 是否和外部有间距                   |\r\n| destroy        | boolean                                                                  | true                | 弹层关闭后是否移除节点             |\r\n| actions        | Action[]                                                                 | []                  | 面板选项列表                       |\r\n| onMaskClick    | () => void                                                               | -                   | 点击遮罩层时触发的回调函数         |\r\n| onCancel       | () => void                                                               | -                   | 显示取消菜单，点击时触发的回调函数 |\r\n| onAction       | (action: ActionSheetItemProps, index: number) => void \\| Promise\\<void\\> | -                   | 点击面板选项后触发的函数           |\r\n| cancelText     | string                                                                   | '取消'              | 取消菜单的文案                     |\r\n| safeArea       | boolean                                                                  | false               | 是否适配安全区域                   |\r\n| afterClose     | () => void                                                               | -                   | ActionSheet 隐藏后的回调函数       |\r\n| mountContainer | MountContainer                                                           | () => document.body | 指定 ActionSheet 挂载的 HTML 节点  |\r\n\r\n### ActionSheetItemProps\r\n\r\n| 属性      | 类型       | 默认值    | 说明                                            |\r\n| :-------- | :--------- | :-------- | :---------------------------------------------- |\r\n| text      | ReactNode  | -         | 按钮文字                                        |\r\n| theme     | string     | 'default' | 按钮主题，可选值 `default`、`primary`、`danger` |\r\n| disabled  | boolean    | false     | 按钮是否禁用                                    |\r\n| className | string     | -         | 追加类名                                        |\r\n| onClick   | () => void | -         | 按钮点击后触发的回调函数                        |\r\n\r\n## CSS 变量\r\n\r\n| 属性                           | 默认值                        | 说明               |\r\n| :----------------------------- | :---------------------------- | :----------------- |\r\n| --background                   | '#fff'                        | 背景色             |\r\n| --border-radius                | '14px'                        | 圆角大小           |\r\n| --spacing-margin               | '8px'                         | 边距               |\r\n| --item-height                  | '56px'                        | 选项高度           |\r\n| --item-font-size               | '20px'                        | 选项字体大小       |\r\n| --item-font-weight             | 500                           | 选项字体粗细       |\r\n| --item-text-color              | 'var(--za-theme-primary)'     | 选项字体色         |\r\n| --item-active-background | 'var(--za-background-active)' | 选项选中背景   |\r\n| --item-opacity-disabled        | 'var(--za-opacity-disabled)'  | 选项禁用不透明度   |\r\n| --cancel-text-color            | 'var(--za-theme-primary)'     | 取消选项字体大小   |\r\n| --cancel-margin-top            | '8px'                         | 取消选项上边距大小 |\r\n"}}]);
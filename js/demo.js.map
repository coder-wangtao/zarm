{"version":3,"file":"js/demo.js","mappings":"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","sources":["webpack://site/./demo/components/Container/index.jsx","webpack://site/./demo/components/Footer/index.jsx","webpack://site/./demo/components/Demo.jsx","webpack://site/./demo/components/Markdown.jsx","webpack://site/./demo/components/SentryBoundary.jsx","webpack://site/./demo/components/App/index.jsx","webpack://site/./demo/index.js","webpack://site/../zarm/src/action-sheet/locale/en_US.tsx","webpack://site/../zarm/src/config-provider/locale/en_US.ts","webpack://site/../zarm/src/modal/locale/en_US.tsx","webpack://site/../zarm/src/date-picker/locale/en_US.tsx","webpack://site/../zarm/src/date-picker-view/locale/en_US.tsx","webpack://site/../zarm/src/date-select/locale/en_US.tsx","webpack://site/../zarm/src/picker/locale/en_US.tsx","webpack://site/../zarm/src/cascader/locale/en_US.tsx","webpack://site/../zarm/src/cascader-view/locale/en_US.tsx","webpack://site/../zarm/src/pull/locale/en_US.tsx","webpack://site/../zarm/src/search-bar/locale/en_US.ts","webpack://site/../zarm/src/select/locale/en_US.tsx","webpack://site/../zarm/src/keyboard/locale/en_US.tsx","webpack://site/../zarm/src/image-preview/locale/en_US.tsx","webpack://site/../zarm/src/image/locale/en_US.tsx","webpack://site/../zarm/src/calendar/locale/en_US.ts","webpack://site/./demo/styles/ lazy ^\\.\\/.*Page$ namespace object"],"sourcesContent":["import { assets } from '@/site.config';\r\nimport Context from '@/utils/context';\r\nimport Events from '@/utils/events';\r\nimport classnames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ConfigProvider, Icon, Popper, Radio } from 'zarm';\r\nimport enUS from 'zarm/config-provider/locale/en_US';\r\nimport zhCN from 'zarm/config-provider/locale/zh_CN';\r\nimport './style.scss';\r\n\r\nconst Icons = Icon.createFromIconfont(assets.iconfont);\r\n\r\nconst Container = (props) => {\r\n  const [locale, setLocale] = useState(window.localStorage.locale || 'zhCN');\r\n  const [primaryColor, setPrimaryColor] = useState(window.localStorage.primaryColor || '#00bc70');\r\n  const [theme, setTheme] = useState(window.localStorage.theme || 'light');\r\n\r\n  const { className, children } = props;\r\n  const cls = classnames('app-container', className);\r\n\r\n  const currentLocale = locale === 'enUS' ? enUS : zhCN;\r\n\r\n  useEffect(() => {\r\n    // TODO: 看一下iframe的表现\r\n    window.scrollTo(0, 0);\r\n    Events.on(window, 'message', ({ data }) => {\r\n      if (data.locale) {\r\n        setLocale(data.locale);\r\n      }\r\n    });\r\n  }, [primaryColor, theme]);\r\n  return (\r\n    <ConfigProvider theme={theme} primaryColor={primaryColor} locale={currentLocale}>\r\n      <div className={cls}>\r\n        <nav>\r\n          <Popper\r\n            trigger=\"click\"\r\n            content={\r\n              <div className=\"setting-container\">\r\n                <ul className=\"colors\">\r\n                  {[\r\n                    '#00bc70',\r\n                    '#1890ff',\r\n                    '#f5222d',\r\n                    '#fa541b',\r\n                    '#13c2c2',\r\n                    '#2f54ec',\r\n                    '#712fd1',\r\n                  ].map((color, index) => {\r\n                    return (\r\n                      <li\r\n                        key={+index}\r\n                        style={{\r\n                          backgroundColor: color,\r\n                        }}\r\n                        onClick={() => {\r\n                          setPrimaryColor(color);\r\n                          window.localStorage.primaryColor = color;\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n                </ul>\r\n                <div className=\"themes\">\r\n                  <Radio.Group\r\n                    compact\r\n                    type=\"button\"\r\n                    value={theme}\r\n                    onChange={(value) => {\r\n                      setTheme(value);\r\n                      window.localStorage.theme = value;\r\n                    }}\r\n                  >\r\n                    <Radio value=\"light\">默认主题</Radio>\r\n                    <Radio value=\"dark\">暗黑主题</Radio>\r\n                  </Radio.Group>\r\n                </div>\r\n              </div>\r\n            }\r\n          >\r\n            <span className=\"setting\" />\r\n          </Popper>\r\n          {/* 这行代码在检查「当前窗口和父窗口的 iframe 数量是否一致」。 */}\r\n          {window.frames.length === window.parent.frames.length && (\r\n            <>\r\n              <div className=\"lang\">\r\n                <Radio.Group\r\n                  compact\r\n                  type=\"button\"\r\n                  value={locale}\r\n                  onChange={(value) => {\r\n                    setLocale(value);\r\n                    window.localStorage.locale = value;\r\n                  }}\r\n                >\r\n                  <Radio value=\"zhCN\">中文</Radio>\r\n                  <Radio value=\"enUS\">EN</Radio>\r\n                </Radio.Group>\r\n              </div>\r\n              <a className=\"github\" href=\"https://github.com/ZhongAnTech/zarm\">\r\n                <Icons type=\"github\" size=\"lg\" />\r\n              </a>\r\n            </>\r\n          )}\r\n        </nav>\r\n        <Context.Provider value={{ locale, primaryColor, theme }}>{children}</Context.Provider>\r\n      </div>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import Locales from '@/locale';\r\nimport Context from '@/utils/context';\r\nimport React, { useContext } from 'react';\r\nimport { FormattedMessage, IntlProvider } from 'react-intl';\r\nimport './style.scss';\r\n\r\nconst Footer = () => {\r\n  const { locale } = useContext(Context);\r\n  //\r\n  return (\r\n    <IntlProvider locale=\"zh-CN\" messages={Locales[locale]}>\r\n      <footer>\r\n        <div className=\"copyright\">\r\n          <FormattedMessage id=\"app.demo.footer.copyright\" />\r\n        </div>\r\n      </footer>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// 在浏览器端运行 Babel，把含 JSX/ES2015+ 的源码字符串编译成普通的可执行 JS 字符串\r\nimport { transform } from '@babel/standalone';\r\nimport * as ZarmDesignIcons from '@zarm-design/icons';\r\nimport React, { useCallback, useEffect, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Panel } from 'zarm';\r\nimport enUS from 'zarm/config-provider/locale/en_US';\r\nimport zhCN from 'zarm/config-provider/locale/zh_CN';\r\nimport 'zarm/style/entry';\r\n\r\nexport default ({ location, globalContext, children }) => {\r\n  const containerId = `${parseInt(Math.random() * 1e9, 10).toString(36)}`;\r\n  const document = children.match(/([^]*)\\n?(```[^]+```)/);\r\n  const title = String(document[1]); // 基本用法\r\n  const containerRef = useRef();\r\n\r\n  const renderSource = useCallback(() => {\r\n    const source = document[2].match(/```(.*)\\n?([^]+)```/); // 代码逻辑\r\n    import('zarm')\r\n      .then((Element) => {\r\n        const locale = {\r\n          en_US: enUS,\r\n          zh_CN: zhCN,\r\n        };\r\n\r\n        const args = [\r\n          'context',\r\n          'React',\r\n          'ReactDOM',\r\n          'Zarm',\r\n          'GlobalContext',\r\n          'Locale',\r\n          'ZarmDesignIcons',\r\n        ];\r\n\r\n        // this是undefined 这个 this 被传入只是出于历史或兼容原因，很可能在最早的版本中代码是类组件写法时还用到过。\r\n        const argv = [this, React, ReactDOM, Element, globalContext, locale, ZarmDesignIcons];\r\n\r\n        return {\r\n          args,\r\n          argv,\r\n        };\r\n      })\r\n      .then(({ args, argv }) => {\r\n        const renderTpl = `ReactDOM.render(\r\n          <Zarm.ConfigProvider primaryColor={GlobalContext.primaryColor} theme={GlobalContext.theme} locale={Locale[GlobalContext.locale === 'zhCN' ? 'zh_CN' : 'en_US']}>\r\n            $1\r\n          </Zarm.ConfigProvider>,\r\n          document.getElementById('${containerId}'),\r\n        )`;\r\n\r\n        // import { List, Loading } from 'zarm';\r\n        // ReactDOM.render(\r\n        //   <List>\r\n        //     <List.Item title=\"普通\" suffix={<Loading />} />\r\n        //     <List.Item title=\"大号\" suffix={<Loading size=\"lg\" />} />\r\n        //     <List.Item title=\"无旋转动画\" suffix={<Loading loading={false} />} />\r\n        //     <List.Item title=\"指定百分比\" suffix={<Loading loading={false} percent={75} />} />\r\n        //   </List>,\r\n        //   mountNode,\r\n        // );\r\n\r\n        // const { List, Loading } = Zarm;\r\n        // ReactDOM.render(\r\n        //   <Zarm.ConfigProvider\r\n        //     primaryColor={GlobalContext.primaryColor}\r\n        //     theme={GlobalContext.theme}\r\n        //     locale={Locale[GlobalContext.locale === 'zhCN' ? 'zh_CN' : 'en_US']}\r\n        //   >\r\n        //     <List>\r\n        //       <List.Item title=\"普通\" suffix={<Loading />} />\r\n        //       <List.Item title=\"大号\" suffix={<Loading size=\"lg\" />} />\r\n        //       <List.Item title=\"无旋转动画\" suffix={<Loading loading={false} />} />\r\n        //       <List.Item title=\"指定百分比\" suffix={<Loading loading={false} percent={75} />} />\r\n        //     </List>\r\n        //   </Zarm.ConfigProvider>,\r\n        //   document.getElementById('c1iosj'),\r\n        // );\r\n\r\n        const value = source[2]\r\n          // 把 import { Button } from 'zarm'; 转成 const { Button } = Zarm;\r\n          .replace(/import\\s+\\{\\s+([\\s\\S]*)\\s+\\}\\s+from\\s+'react';/, 'const { $1 } = React;')\r\n          .replace(/import\\s+\\{\\s+([\\s\\S]*)\\s+\\}\\s+from\\s+'zarm';/, 'const { $1 } = Zarm;')\r\n          .replace(\r\n            /import\\s+\\{\\s+([\\s\\S]*)\\s+\\}\\s+from\\s+'@zarm-design\\/icons';/,\r\n            'const { $1 } = ZarmDesignIcons;',\r\n          )\r\n          .replace(\r\n            /import\\s+([\\s\\S]*)\\s+from\\s+'@zarm-design\\/icons';/,\r\n            'const $1 = ZarmDesignIcons;',\r\n          )\r\n          .replace(\r\n            /import\\s+(.*)\\s+from\\s+'zarm\\/lib\\/config-provider\\/locale\\/(.*)';/g,\r\n            \"const $1 = Locale['$2'];\",\r\n          )\r\n          // 替换格式\r\n          // ReactDOM.render(<Demo />, mountNode);\r\n          .replace(/ReactDOM.render\\(\\s?([^]+?)(,\\s?mountNode\\s?\\))/g, renderTpl)\r\n          // 替换格式\r\n          // ReactDOM.render(\r\n          //   <>\r\n          //     <Button>default</Button>\r\n          //     <Button theme=\"primary\">primary</Button>\r\n          //   </>,\r\n          //   mountNode,\r\n          // );\r\n          .replace(/ReactDOM.render\\(\\s?([^]+?)(,([\\r\\n])(\\s)*mountNode,(\\s)*\\))/g, renderTpl);\r\n\r\n        // 这里使用的是浏览器端 Babel (@babel/standalone)，可以即时将 JSX/ES6 转成浏览器可执行的 JS。\r\n        const { code } = transform(value, {\r\n          presets: ['es2015', 'react'],\r\n          plugins: ['proposal-class-properties'],\r\n        });\r\n        args.push(code);\r\n\r\n        // 这句相当于创建一个新的作用域执行编译后的 JS 代码，使其能够访问 React、Zarm、GlobalContext 等变量。\r\n        // eslint-disable-next-line\r\n        new Function(...args)(...argv);\r\n        // source[2] = value;\r\n      })\r\n      .catch((err) => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          throw err;\r\n        }\r\n      });\r\n  }, [containerId, document, globalContext]);\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    renderSource();\r\n\r\n    return function cleanup() {\r\n      // 用于卸载一个已经通过 ReactDOM.render() 挂载到某个 DOM 节点的 React 组件。\r\n      container && ReactDOM.unmountComponentAtNode(container);\r\n    };\r\n  }, [renderSource]);\r\n\r\n  // Panel的例子特殊处理\r\n  return location.pathname === '/panel' ? (\r\n    <div id={containerId} ref={containerRef} />\r\n  ) : (\r\n    <Panel title={title}>\r\n      <div id={containerId} ref={containerRef} />\r\n    </Panel>\r\n  );\r\n};\r\n","import Context from '@/utils/context';\r\nimport { marked } from 'marked';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { NavBar, Radio, Icon } from 'zarm';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Demo from './Demo';\r\n\r\n// # Loading 加载中\r\n\r\n// ## 基本用法\r\n\r\n// ```jsx\r\n// import { List, Loading } from 'zarm';\r\n\r\n// ReactDOM.render(\r\n//   <List>\r\n//     <List.Item title=\"普通\" suffix={<Loading />} />\r\n//     <List.Item title=\"大号\" suffix={<Loading size=\"lg\" />} />\r\n//     <List.Item title=\"无旋转动画\" suffix={<Loading loading={false} />} />\r\n//     <List.Item title=\"指定百分比\" suffix={<Loading loading={false} percent={75} />} />\r\n//   </List>,\r\n//   mountNode,\r\n// );\r\n// ```\r\n\r\n// ## 传统菊花状\r\n\r\n// ```jsx\r\n// import { List, Loading } from 'zarm';\r\n\r\n// ReactDOM.render(\r\n//   <List>\r\n//     <List.Item title=\"普通\" suffix={<Loading type=\"spinner\" />} />\r\n//     <List.Item title=\"大号\" suffix={<Loading type=\"spinner\" size=\"lg\" />} />\r\n//   </List>,\r\n//   mountNode,\r\n// );\r\n// ```\r\n\r\n// ## API\r\n\r\n// | 属性        | 类型    | 默认值     | 说明                                                       |\r\n// | :---------- | :------ | :--------- | :--------------------------------------------------------- |\r\n// | type        | string  | 'circular' | 指示器类型，可选值 `circular` 圆环状、`spinner` 传统菊花状 |\r\n// | size        | string  | -          | 指示器大小，可选值 `lg`                                    |\r\n// | loading     | boolean | ture       | 圆环指示器是否执行旋转动画                                 |\r\n// | strokeWidth | number  | 5          | 圆环指示器线条宽度                                         |\r\n// | percent     | number  | 20         | 圆环状无动画指示器填充百分比                               |\r\n\r\n// ## CSS 变量\r\n\r\n// | 属性                         | 默认值                    | 说明                     |\r\n// | :--------------------------- | :------------------------ | :----------------------- |\r\n// | --size                       | '22px'                    | 指示器大小               |\r\n// | --size-large                 | '29px'                    | 大型指示器大小           |\r\n// | --stroke-color               | '#e6e6e6'                 | 指示器轨道颜色           |\r\n// | --stroke-active-color        | 'var(--za-theme-primary)' | 指示器激活色             |\r\n// | --spinner-item-color         | '#80858e'                 | 菊花状指示器花瓣颜色     |\r\n// | --spinner-item-width         | '3px'                     | 菊花状指示器花瓣宽度     |\r\n// | --spinner-item-height        | '32%'                     | 菊花状指示器花瓣长度     |\r\n// | --spinner-item-border-radius | '1.5px'                   | 菊花状指示器花瓣圆角大小 |\r\n\r\nexport default (props) => {\r\n  const globalContext = useContext(Context);\r\n  const { content } = props;\r\n  const components = new Map();\r\n  const nodeList = [];\r\n\r\n  if (typeof content !== 'string') return null;\r\n\r\n  const renderDOM = () => {\r\n    // eslint-disable-next-line\r\n    for (const [id, component] of components) {\r\n      const div = document.getElementById(id);\r\n      nodeList.push(div);\r\n      if (div instanceof HTMLElement) {\r\n        ReactDOM.render(component, div);\r\n      }\r\n    }\r\n\r\n    // 加载样式\r\n    // const head = document.getElementsByTagName('head')[0];\r\n    // const style = document.createElement('style');\r\n    // style.type = 'text/css';\r\n    // style.appendChild(document.createTextNode(this.style));\r\n    // head.appendChild(style);\r\n  };\r\n\r\n  useEffect(() => {\r\n    renderDOM();\r\n\r\n    return function cleanup() {\r\n      nodeList.forEach((node) => {\r\n        ReactDOM.unmountComponentAtNode(node);\r\n      });\r\n    };\r\n  });\r\n\r\n  // doc.replace(/<style>\\s?([^]+?)(<\\/style>)/g, (match, p1) => {\r\n  //   style = p1;\r\n  // });\r\n\r\n  const html = marked(\r\n    content\r\n      .replace(/## 自定义 Iconfont 图标\\s?([^]+)/g, '') // 排除无法展示示例的情况\r\n      .replace(/## API\\s?([^]+)/g, '') // 排除API显示\r\n      .replace(/##\\s?([^]+?)((?=##)|$)/g, (match, p1) => {\r\n        const id = parseInt(Math.random() * 1e9, 10).toString(36);\r\n        components.set(\r\n          id,\r\n          React.createElement(Demo, { ...props, globalContext, location: useLocation() }, p1),\r\n        );\r\n        return `<div id=${id}></div>`;\r\n      }),\r\n    {\r\n      renderer: new marked.Renderer(),\r\n    },\r\n  );\r\n\r\n  return (\r\n    <main dangerouslySetInnerHTML={{ __html: html }} />\r\n    //     <NavBar\r\n    //   style={{ position: 'fixed', top: 0 }}\r\n    //   title={`${data.name} ${data.description}`}\r\n    //   left={leftControl}\r\n    // />\r\n  );\r\n};\r\n","// 你贴的这段代码是一个 React 错误边界（Error Boundary），结合了 Sentry 用于捕获和上报生产环境的前端错误\r\n\r\nimport { version } from '@/package.json';\r\nimport * as Sentry from '@sentry/browser';\r\nimport React, { Component } from 'react';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  // 仅在生产环境下初始化 Sentry。\r\n  Sentry.init({\r\n    dsn: 'https://94149d955af0480aaef1edd42fa6c17e@ets.zhongan.io/8',\r\n    release: version,\r\n    environment: 'prd',\r\n  });\r\n}\r\n\r\nclass SentryBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      eventId: null,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // 生产环境：\r\n    //     将错误保存到 state.error。\r\n    //     使用 Sentry.withScope：\r\n    //     setExtras(errorInfo)：附加错误信息（比如组件栈）。\r\n    //     captureException(error)：上报错误并返回事件 ID。\r\n    // 开发环境：\r\n    //     仅打印到控制台，不上报 Sentry。\r\n    if (process.env.NODE_ENV === 'production') {\r\n      this.setState({ error });\r\n      Sentry.withScope((scope) => {\r\n        scope.setExtras(errorInfo);\r\n        const eventId = Sentry.captureException(error);\r\n        this.setState({ eventId });\r\n      });\r\n    } else {\r\n      console.error('SentryBoundary', error, errorInfo);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { error, eventId } = this.state;\r\n\r\n    return error ? (\r\n      // 如果捕获到错误：\r\n      // 显示一个按钮，点击会弹出 Sentry 的 用户反馈对话框。\r\n      // 如果没有错误：\r\n      // 正常渲染子组件。\r\n      <button onClick={() => Sentry.showReportDialog({ eventId })}>Report feedback</button>\r\n    ) : (\r\n      children\r\n    );\r\n  }\r\n}\r\n\r\nexport default SentryBoundary;\r\n","import Container from '@/demo/components/Container';\r\nimport Footer from '@/demo/components/Footer';\r\nimport Markdown from '@/demo/components/Markdown';\r\nimport SentryBoundary from '@/demo/components/SentryBoundary';\r\nimport { components } from '@/site.config';\r\nimport { pascalCase } from 'change-case';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Toast } from 'zarm';\r\nimport './style.scss';\r\n\r\n// 使用 zarm 的 Toast 来显示全局加载状态。\r\nconst Loading = () => {\r\n  React.useEffect(() => {\r\n    const { close } = Toast.show({ icon: 'loading', duration: 0 });\r\n    return () => {\r\n      close?.();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n// 你使用了 react-loadable 的 Loadable.Map 来动态加载组件和样式：\r\nconst LoadableComponent = (component) => {\r\n  const loader = { page: component.module };\r\n  const compName = pascalCase(component.key);\r\n\r\n  if (component.style) {\r\n    loader.style = () => import(`@/demo/styles/${compName}Page`);\r\n  }\r\n\r\n  return Loadable.Map({\r\n    loader,\r\n    render: (loaded, props) => {\r\n      return (\r\n        <Container className={`${component.key}-page`}>\r\n          <Markdown content={loaded.page.default} component={component} {...props} />\r\n          <Footer />\r\n        </Container>\r\n      );\r\n    },\r\n    loading: () => <Loading />,\r\n  });\r\n};\r\n\r\nconst App = () => {\r\n  const { general, form, feedback, view, navigation, hooks, other } = components;\r\n  return (\r\n    <SentryBoundary>\r\n      <Suspense fallback={<Loading />}>\r\n        <Switch>\r\n          {/* finished */}\r\n          <Route exact path=\"/\" component={lazy(() => import('@/demo/pages/Index'))} />\r\n          {[...general, ...form, ...feedback, ...view, ...navigation, ...hooks, ...other].map(\r\n            (component, i) => (\r\n              <Route key={+i} path={`/${component.key}`} component={LoadableComponent(component)} />\r\n            ),\r\n          )}\r\n          <Route component={lazy(() => import('@/demo/pages/NotFoundPage'))} />\r\n        </Switch>\r\n      </Suspense>\r\n    </SentryBoundary>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import 'core-js/es';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('app'),\r\n);\r\n","export default {\r\n  cancelText: 'Cancel',\r\n};\r\n","import ActionSheet from '../../action-sheet/locale/en_US';\r\nimport Calendar from '../../calendar/locale/en_US';\r\nimport CascaderView from '../../cascader-view/locale/en_US';\r\nimport Cascader from '../../cascader/locale/en_US';\r\nimport DatePickerView from '../../date-picker-view/locale/en_US';\r\nimport DatePicker from '../../date-picker/locale/en_US';\r\nimport DateSelect from '../../date-select/locale/en_US';\r\nimport ImagePreview from '../../image-preview/locale/en_US';\r\nimport Image from '../../image/locale/en_US';\r\nimport Keyboard from '../../keyboard/locale/en_US';\r\nimport Modal from '../../modal/locale/en_US';\r\nimport Picker from '../../picker/locale/en_US';\r\nimport Pull from '../../pull/locale/en_US';\r\nimport SearchBar from '../../search-bar/locale/en_US';\r\nimport Select from '../../select/locale/en_US';\r\n\r\nexport default {\r\n  locale: 'en-US',\r\n  ActionSheet,\r\n  Modal,\r\n  DatePicker,\r\n  DatePickerView,\r\n  DateSelect,\r\n  Picker,\r\n  Cascader,\r\n  CascaderView,\r\n  Pull,\r\n  SearchBar,\r\n  Select,\r\n  Keyboard,\r\n  ImagePreview,\r\n  Image,\r\n  Calendar,\r\n};\r\n","export default {\r\n  confirmText: 'Ok',\r\n  cancelText: 'Cancel',\r\n};\r\n","export default {\r\n  cancelText: 'Cancel',\r\n  confirmText: 'Ok',\r\n  title: 'please select',\r\n};\r\n","export default {\r\n  year: '',\r\n  month: '',\r\n  week: '',\r\n  weeks: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\r\n  day: '',\r\n  hour: '',\r\n  minute: '',\r\n  second: '',\r\n  am: 'AM',\r\n  pm: 'PM',\r\n};\r\n","export default {\r\n  placeholder: 'please select',\r\n};\r\n","export default {\r\n  title: 'please select',\r\n  confirmText: 'Ok',\r\n  cancelText: 'Cancel',\r\n};\r\n","export default {\r\n  cancelText: 'Cancel',\r\n  confirmText: 'Ok',\r\n  title: 'please select',\r\n};\r\n","export default {\r\n  unselectedTabText: 'Select',\r\n};\r\n","export default {\r\n  pullText: 'pull down to refresh',\r\n  dropText: 'release to refresh',\r\n  loadingText: 'loading',\r\n  successText: 'loaded successfully',\r\n  failureText: 'failed to load',\r\n  completeText: 'loading completed',\r\n};\r\n","export default {\r\n  placeholder: 'Search',\r\n  cancelText: 'Cancel',\r\n};\r\n","export default {\r\n  placeholder: 'please select',\r\n};\r\n","export default {\r\n  confirmText: 'Ok',\r\n};\r\n","export default {\r\n  loadBefore: 'load origin',\r\n  loadStart: 'loading',\r\n  loadEnd: 'loading completed',\r\n};\r\n","export default {\r\n  loadFailed: 'loading failed',\r\n  loading: 'loading',\r\n};\r\n","export default {\r\n  weeks: ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'],\r\n  months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n  yearMonthFormat: 'MMM YYYY',\r\n  weekStartsOn: 'Sunday',\r\n};\r\n","var map = {\n\t\"./AffixPage\": [\n\t\t25881,\n\t\t5881\n\t],\n\t\"./BadgePage\": [\n\t\t58424,\n\t\t8424\n\t],\n\t\"./ButtonPage\": [\n\t\t22515,\n\t\t2515\n\t],\n\t\"./CalendarPage\": [\n\t\t51893,\n\t\t1893\n\t],\n\t\"./CarouselPage\": [\n\t\t29541,\n\t\t9541\n\t],\n\t\"./CellPage\": [\n\t\t43339,\n\t\t3339\n\t],\n\t\"./CheckboxPage\": [\n\t\t11854,\n\t\t1854\n\t],\n\t\"./ConfigProviderPage\": [\n\t\t17480,\n\t\t7480\n\t],\n\t\"./FilePickerPage\": [\n\t\t67919,\n\t\t7919\n\t],\n\t\"./GridPage\": [\n\t\t79139,\n\t\t9139\n\t],\n\t\"./IconPage\": [\n\t\t92062,\n\t\t2062\n\t],\n\t\"./ImagePage\": [\n\t\t29254,\n\t\t9254\n\t],\n\t\"./ImagePreviewPage\": [\n\t\t99696,\n\t\t9696\n\t],\n\t\"./MaskPage\": [\n\t\t94899,\n\t\t4899\n\t],\n\t\"./MessagePage\": [\n\t\t98008,\n\t\t8008\n\t],\n\t\"./ModalPage\": [\n\t\t20482,\n\t\t482\n\t],\n\t\"./NoticeBarPage\": [\n\t\t91658,\n\t\t1658\n\t],\n\t\"./PanelPage\": [\n\t\t38025,\n\t\t8025\n\t],\n\t\"./PickerPage\": [\n\t\t20153,\n\t\t153\n\t],\n\t\"./PopperPage\": [\n\t\t49657,\n\t\t9657\n\t],\n\t\"./PopupPage\": [\n\t\t48485,\n\t\t8485\n\t],\n\t\"./ProgressPage\": [\n\t\t45812,\n\t\t5812\n\t],\n\t\"./PullPage\": [\n\t\t47976,\n\t\t7976\n\t],\n\t\"./RadioPage\": [\n\t\t11632,\n\t\t1632\n\t],\n\t\"./SearchBarPage\": [\n\t\t66802,\n\t\t6802\n\t],\n\t\"./SkeletonPage\": [\n\t\t12096,\n\t\t2096\n\t],\n\t\"./TabsPage\": [\n\t\t98535,\n\t\t8535\n\t],\n\t\"./ToastPage\": [\n\t\t20412,\n\t\t412\n\t],\n\t\"./TooltipPage\": [\n\t\t9288,\n\t\t9288\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 64445;\nmodule.exports = webpackAsyncContext;"],"names":["Icons","Icon","createFromIconfont","assets","iconfont","props","useState","window","localStorage","locale","setLocale","primaryColor","setPrimaryColor","theme","setTheme","className","children","cls","classnames","currentLocale","enUS","zhCN","useEffect","scrollTo","Events","on","data","trigger","content","map","color","index","key","style","backgroundColor","onClick","Group","compact","type","value","onChange","frames","length","parent","href","size","Provider","useContext","Context","messages","Locales","id","location","globalContext","containerId","parseInt","Math","random","toString","document","match","title","String","containerRef","useRef","renderSource","useCallback","source","then","Element","en_US","zh_CN","args","argv","React","ReactDOM","ZarmDesignIcons","renderTpl","replace","code","transform","presets","plugins","push","Function","catch","err","container","current","pathname","ref","components","Map","nodeList","component","div","getElementById","HTMLElement","renderDOM","forEach","node","html","marked","p1","set","Demo","useLocation","renderer","Renderer","dangerouslySetInnerHTML","__html","Sentry","dsn","release","environment","SentryBoundary","state","error","eventId","errorInfo","this","setState","scope","setExtras","Component","Loading","close","Toast","show","icon","duration","LoadableComponent","loader","page","module","compName","pascalCase","Loadable","render","loaded","Container","Markdown","default","Footer","loading","general","form","feedback","view","navigation","hooks","other","Suspense","fallback","exact","path","lazy","i","ActionSheet","cancelText","Modal","confirmText","DatePicker","DatePickerView","year","month","week","weeks","day","hour","minute","second","am","pm","DateSelect","placeholder","Picker","Cascader","CascaderView","unselectedTabText","Pull","pullText","dropText","loadingText","successText","failureText","completeText","SearchBar","Select","Keyboard","ImagePreview","loadBefore","loadStart","loadEnd","Image","loadFailed","Calendar","months","yearMonthFormat","weekStartsOn","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","ids","keys","Object","exports"],"sourceRoot":""}
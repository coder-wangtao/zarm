{"version":3,"file":"js/1879.fd011eb8.js","mappings":"0GAAA,8tW","sources":["webpack://site/../zarm/src/radio/demo.md"],"sourcesContent":["export default \"# Radio 复选框\\r\\n\\r\\n## 基本用法\\r\\n\\r\\n```jsx\\r\\nimport { List, Radio } from 'zarm';\\r\\nimport { Star, StarFill } from '@zarm-design/icons';\\r\\n\\r\\nReactDOM.render(\\r\\n  <List>\\r\\n    <List.Item>\\r\\n      <Radio>普通</Radio>\\r\\n    </List.Item>\\r\\n    <List.Item>\\r\\n      <Radio defaultChecked>默认选中</Radio>\\r\\n    </List.Item>\\r\\n    <List.Item>\\r\\n      <Radio disabled>禁用</Radio>\\r\\n    </List.Item>\\r\\n    <List.Item>\\r\\n      <Radio defaultChecked disabled>\\r\\n        选中且禁用\\r\\n      </Radio>\\r\\n    </List.Item>\\r\\n  </List>,\\r\\n  mountNode,\\r\\n);\\r\\n```\\r\\n\\r\\n## 组合使用\\r\\n\\r\\n```jsx\\r\\nimport { useState } from 'react';\\r\\nimport { List, Radio } from 'zarm';\\r\\n\\r\\nconst Demo = () => {\\r\\n  const [value, setValue] = useState([]);\\r\\n\\r\\n  const onChange = (value) => {\\r\\n    console.log('onChange', value);\\r\\n    setValue(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <List>\\r\\n      <List.Item>\\r\\n        <Radio.Group value={value} onChange={onChange}>\\r\\n          <Radio value=\\\"0\\\">选项一</Radio>\\r\\n          <Radio value=\\\"1\\\">选项二</Radio>\\r\\n          <Radio value=\\\"2\\\">选项三</Radio>\\r\\n        </Radio.Group>\\r\\n      </List.Item>\\r\\n    </List>\\r\\n  );\\r\\n};\\r\\n\\r\\nReactDOM.render(<Demo />, mountNode);\\r\\n```\\r\\n\\r\\n## 禁用\\r\\n\\r\\n```jsx\\r\\nimport { List, Radio } from 'zarm';\\r\\n\\r\\nReactDOM.render(\\r\\n  <List>\\r\\n    <List.Item>\\r\\n      <Radio.Group disabled>\\r\\n        <Radio value=\\\"0\\\">选项一</Radio>\\r\\n        <Radio value=\\\"1\\\">选项二</Radio>\\r\\n        <Radio value=\\\"2\\\">选项三</Radio>\\r\\n      </Radio.Group>\\r\\n    </List.Item>\\r\\n  </List>,\\r\\n  mountNode,\\r\\n);\\r\\n```\\r\\n\\r\\n## 通栏样式\\r\\n\\r\\n```jsx\\r\\nimport { List, Radio } from 'zarm';\\r\\n\\r\\nReactDOM.render(\\r\\n  <List>\\r\\n    <List.Item>\\r\\n      <Radio.Group block>\\r\\n        <Radio value=\\\"0\\\">选项一</Radio>\\r\\n        <Radio value=\\\"1\\\">选项二</Radio>\\r\\n      </Radio.Group>\\r\\n    </List.Item>\\r\\n  </List>,\\r\\n  mountNode,\\r\\n);\\r\\n```\\r\\n\\r\\n## 按钮样式\\r\\n\\r\\n```jsx\\r\\nimport { Radio, List } from 'zarm';\\r\\n\\r\\nReactDOM.render(\\r\\n  <List>\\r\\n    <List.Item title=\\\"普通\\\">\\r\\n      <Radio.Group type=\\\"button\\\">\\r\\n        <Radio value=\\\"0\\\">选项一</Radio>\\r\\n        <Radio value=\\\"1\\\">选项二</Radio>\\r\\n        <Radio value=\\\"2\\\">选项三</Radio>\\r\\n      </Radio.Group>\\r\\n    </List.Item>\\r\\n    <List.Item title=\\\"禁用\\\">\\r\\n      <Radio.Group type=\\\"button\\\" disabled>\\r\\n        <Radio value=\\\"0\\\">选项一</Radio>\\r\\n        <Radio value=\\\"1\\\">选项二</Radio>\\r\\n        <Radio value=\\\"2\\\">选项三</Radio>\\r\\n      </Radio.Group>\\r\\n    </List.Item>\\r\\n    <List.Item title=\\\"通栏\\\">\\r\\n      <Radio.Group type=\\\"button\\\" block>\\r\\n        <Radio value=\\\"0\\\">选项一</Radio>\\r\\n        <Radio value=\\\"1\\\">选项二</Radio>\\r\\n        <Radio value=\\\"2\\\">选项三</Radio>\\r\\n      </Radio.Group>\\r\\n    </List.Item>\\r\\n    <List.Item title=\\\"紧凑\\\">\\r\\n      <Radio.Group type=\\\"button\\\" compact>\\r\\n        <Radio value=\\\"0\\\">选项一</Radio>\\r\\n        <Radio value=\\\"1\\\">选项二</Radio>\\r\\n        <Radio value=\\\"2\\\">选项三</Radio>\\r\\n      </Radio.Group>\\r\\n    </List.Item>\\r\\n  </List>,\\r\\n  mountNode,\\r\\n);\\r\\n```\\r\\n\\r\\n## 列表样式\\r\\n\\r\\n```jsx\\r\\nimport { Radio } from 'zarm';\\r\\nimport { Star, StarFill } from '@zarm-design/icons';\\r\\n\\r\\nReactDOM.render(\\r\\n  <Radio.Group type=\\\"list\\\">\\r\\n    <Radio value=\\\"0\\\">选项一</Radio>\\r\\n    <Radio value=\\\"1\\\">选项二</Radio>\\r\\n    <Radio value=\\\"2\\\" disabled>\\r\\n      选项三（禁止选择）\\r\\n    </Radio>\\r\\n  </Radio.Group>,\\r\\n  mountNode,\\r\\n);\\r\\n```\\r\\n\\r\\n## 列表样式（尾部图标）\\r\\n\\r\\n```jsx\\r\\nimport { Radio } from 'zarm';\\r\\n\\r\\nReactDOM.render(\\r\\n  <Radio.Group type=\\\"list\\\" listIconAlign=\\\"after\\\">\\r\\n    <Radio value=\\\"0\\\">选项一</Radio>\\r\\n    <Radio value=\\\"1\\\">选项二</Radio>\\r\\n    <Radio value=\\\"2\\\" disabled>\\r\\n      选项三（禁止选择）\\r\\n    </Radio>\\r\\n  </Radio.Group>,\\r\\n  mountNode,\\r\\n);\\r\\n```\\r\\n\\r\\n## 自定义图标\\r\\n\\r\\n```jsx\\r\\nimport { List, Radio, Button } from 'zarm';\\r\\nimport { Star, StarFill, CloseCircle, CloseCircleFill, Close, Success } from '@zarm-design/icons';\\r\\n\\r\\nReactDOM.render(\\r\\n  <List>\\r\\n    <List.Item>\\r\\n      <Radio.Group>\\r\\n        <Radio\\r\\n          value=\\\"0\\\"\\r\\n          renderIcon={({ checked }) =>\\r\\n            checked ? <Success theme=\\\"primary\\\" /> : <Close theme=\\\"danger\\\" />\\r\\n          }\\r\\n        >\\r\\n          选项一\\r\\n        </Radio>\\r\\n        <Radio\\r\\n          value=\\\"1\\\"\\r\\n          renderIcon={({ checked }) =>\\r\\n            checked ? <StarFill theme=\\\"primary\\\" /> : <Star theme=\\\"primary\\\" />\\r\\n          }\\r\\n        >\\r\\n          选项二\\r\\n        </Radio>\\r\\n        <Radio value=\\\"2\\\">选项三</Radio>\\r\\n      </Radio.Group>\\r\\n    </List.Item>\\r\\n  </List>,\\r\\n  mountNode,\\r\\n);\\r\\n```\\r\\n\\r\\n## 自定义样式\\r\\n\\r\\n```jsx\\r\\nimport { useState, useRef } from 'react';\\r\\nimport { List, Radio } from 'zarm';\\r\\nimport { Success } from '@zarm-design/icons';\\r\\n\\r\\nconst items = ['选项一', '选项二', '选项三'];\\r\\n\\r\\nconst Demo = () => {\\r\\n  const [value, setValue] = useState(['0']);\\r\\n\\r\\n  const onChange = (value) => {\\r\\n    console.log('onChange', value);\\r\\n    setValue(value);\\r\\n  };\\r\\n\\r\\n  const CustomRadio = (props) => {\\r\\n    const RadioRef = useRef();\\r\\n\\r\\n    return (\\r\\n      <Radio\\r\\n        ref={RadioRef}\\r\\n        value={props.value}\\r\\n        render={({ checked }) => (\\r\\n          <div\\r\\n            style={{\\r\\n              position: 'relative',\\r\\n              padding: '4px 8px',\\r\\n              fontSize: 14,\\r\\n              borderWidth: '1px',\\r\\n              borderStyle: 'solid',\\r\\n              borderColor: checked ? 'var(--za-theme-primary)' : 'var(--za-theme-default)',\\r\\n            }}\\r\\n            onClick={() => {\\r\\n              RadioRef.current.check();\\r\\n            }}\\r\\n          >\\r\\n            <span\\r\\n              style={{\\r\\n                display: checked ? 'inline-block' : 'none',\\r\\n                position: 'absolute',\\r\\n                right: 0,\\r\\n                top: 0,\\r\\n                fontSize: 0,\\r\\n              }}\\r\\n            >\\r\\n              <Success style={{ fontSize: 10 }} theme=\\\"primary\\\" />\\r\\n            </span>\\r\\n            {props.label}\\r\\n          </div>\\r\\n        )}\\r\\n      />\\r\\n    );\\r\\n  };\\r\\n  return (\\r\\n    <List>\\r\\n      <List.Item>\\r\\n        <Radio.Group\\r\\n          value={value}\\r\\n          onChange={onChange}\\r\\n          style={{\\r\\n            '--group-spacing-horizontal': '8px',\\r\\n            '--group-spacing-vertical': '6px',\\r\\n          }}\\r\\n        >\\r\\n          {items.map((item, index) => (\\r\\n            <CustomRadio key={+index} value={String(index)} label={item} />\\r\\n          ))}\\r\\n        </Radio.Group>\\r\\n      </List.Item>\\r\\n    </List>\\r\\n  );\\r\\n};\\r\\n\\r\\nReactDOM.render(<Demo />, mountNode);\\r\\n```\\r\\n\\r\\n## API\\r\\n\\r\\n### Radio\\r\\n\\r\\n| 属性           | 类型                                             | 默认值 | 说明                                                |\\r\\n| :------------- | :----------------------------------------------- | :----- | :-------------------------------------------------- |\\r\\n| disabled       | boolean                                          | false  | 是否禁用                                            |\\r\\n| value          | string \\\\| number                             | -      | 值                                                  |\\r\\n| checked        | boolean                                          | false  | 当前是否选中                                        |\\r\\n| defaultChecked | boolean                                          | false  | 初始是否选中                                        |\\r\\n| id             | string                                           | -      | 方便外部带有 for 属性的 label 标签控制当前 Radio |\\r\\n| onChange       | (event: ChangeEvent\\\\<HTMLInputElement\\\\>) => void | -      | 值变化时触发的回调函数                              |\\r\\n| renderIcon     | (props: number \\\\| string) => React.ReactNode        | -      | 自定义图标渲染函数                                  |\\r\\n| render         | (props: number \\\\| string) => React.ReactNode        | -      | 自定义样式渲染函数                                  |\\r\\n\\r\\n### Radio.Group\\r\\n\\r\\n| 属性          | 类型                                   | 默认值   | 说明                                                |\\r\\n| :------------ | :------------------------------------- | :------- | :-------------------------------------------------- |\\r\\n| type          | string                                 | -        | 显示类型，可选值 `button`、`list`                   |\\r\\n| value         | number \\\\| string                   | []       | 选中值                                              |\\r\\n| defaultValue  | number \\\\| string                   | []       | 初始选中值                                          |\\r\\n| disabled      | boolean                                | false    | 是否禁用                                            |\\r\\n| block         | boolean                                | false    | 子项是否为块级元素                                  |\\r\\n| compact   | boolean                           | false    | 按钮类型时，是否为紧凑模式                                   |\\r\\n| listIconAlign | string                                 | 'before' | type 为`list`时图标的位置，可选值 `before`、`after` |\\r\\n| onChange      | (values: number \\\\| string) => void | -        | 值变化时触发的回调函数                              |\\r\\n\\r\\n## CSS 变量\\r\\n\\r\\n### Radio\\r\\n\\r\\n| 属性                         | 默认值                                       | 说明                 |\\r\\n| :--------------------------- | :------------------------------------------- | :------------------- |\\r\\n| --icon-size                  | '22px'                                       | 图标大小             |\\r\\n| --icon-background            | 'transparent'                                | 图标背景色           |\\r\\n| --icon-border-radius         | '22px'                                       | 图标圆角大虾皮       |\\r\\n| --icon-border-width          | '1px'                                        | 图标边框粗细         |\\r\\n| --icon-border-color          | 'rgb(199, 199, 204)'                         | 图标边框颜色         |\\r\\n| --tick-font-size             | '16px'                                       | 勾选标记大小         |\\r\\n| --tick-color                 | '#fff'                                       | 勾选标记颜色         |\\r\\n| --tick-transition            | 'all 0.2s cubic-bezier(.71, -0.46, .88, .6)' | 勾选标记动画效果     |\\r\\n| --text-margin-horizontal     | '8px'                                        | 文字横向外边距       |\\r\\n| --active-opacity             | 0.6                                          | 激活状态透明度       |\\r\\n| --checked-icon-background    | 'var(--za-theme-primary)'                    | 选中状态图标背景色   |\\r\\n| --checked-icon-border-color  | 'var(--za-theme-primary)'                    | 选中状态图标边框颜色 |\\r\\n| --checked-tick-color         | 'var(--za-theme-primary)'                    | 选中状态勾选标记颜色 |\\r\\n| --disabled-icon-background   | '#f2f2f2'                                    | 禁用状态图标背景色   |\\r\\n| --disabled-icon-border-color | 'rgba(199, 199, 204, 0.7)'                   | 禁用状态图标边框颜色 |\\r\\n| --disabled-text-color        | 'rgba(0, 0, 0, 0.3)'                         | 禁用状态文字颜色     |\\r\\n| --disabled--tick-color       | '#bcbcbc'                                    | 禁用状态勾选标记颜色 |\\r\\n\\r\\n### Radio.Group\\r\\n\\r\\n| 属性                       | 默认值 | 说明                 |\\r\\n| :------------------------- | :----- | :------------------- |\\r\\n| --group-spacing-vertical   | '8px'  | 组合使用时的纵向间距 |\\r\\n| --group-spacing-horizontal | '24px' | 组合使用时的横向间距 |\\r\\n\\r\\n## Radio 指令式 API\\r\\n```js\\r\\n// 选择\\r\\nref.current.check();\\r\\n```\\r\\n\";"],"names":[],"sourceRoot":""}
{"version":3,"file":"js/8749.f6eb9a48.js","mappings":"0GAAA,qnN","sources":["webpack://site/./web/docs/migration-v3.md"],"sourcesContent":["export default \"# 从 v2 到 v3\\r\\n\\r\\n本文档将帮助你从 v2 版本升级到 v3\\r\\n\\r\\n## 组件重构与移除\\r\\n\\r\\n- 移除 `Cell` 组件，更名为 `List`\\r\\n- 移除 `StackPicker` 组件，移至 `Cascader`\\r\\n- 移除 `Drag` 组件\\r\\n- `Loading` 组件在 v3 版本中废弃，移至 Toast.show({ icon: 'loading' }) 指令式调用\\r\\n- 移除 `ActivityIndicator` 组件，更名为 `Loading`\\r\\n\\r\\n## 组件 API 调整\\r\\n\\r\\n- 弹层类组件确认文案的 API `okText` 统一变更为 `confirmText`，确认事件 API `onOk` 变更为 `onConfirm`。涉及以下组件：\\r\\n\\r\\n  - Modal.(alert | confirm)\\r\\n  - Picker\\r\\n  - DatePicker\\r\\n  - KeyboardPicker\\r\\n\\r\\n```diff\\r\\n  <Picker\\r\\n-   okText=\\\"确定\\\"\\r\\n-   onOk={() => {}}\\r\\n+   confirmText=\\\"确定\\\"\\r\\n+   onConfirm={() => {}}\\r\\n  />\\r\\n```\\r\\n\\r\\n- 组件值字段映射 API `valueMember` 统一变更为 `fieldNames`。涉及以下组件：\\r\\n\\r\\n  - Picker、PickerView\\r\\n  - Cascader、CascaderView\\r\\n  - Select\\r\\n\\r\\n```diff\\r\\n  <Picker\\r\\n-   valueMember=\\\"code\\\"\\r\\n+   fieldNames={{ value: 'code' }}\\r\\n  />\\r\\n```\\r\\n\\r\\n### Calendar\\r\\n\\r\\n`multiple` 双选模式，变更为 `mode=\\\"range\\\"`\\r\\n\\r\\n```diff\\r\\n  <Calendar\\r\\n-   multiple\\r\\n+   mode=\\\"range\\\"\\r\\n  />\\r\\n```\\r\\n\\r\\n### Checkbox / Radio\\r\\n\\r\\n- 组合使用时 `type` 类型可选值 `cell` 调整为 `list`。\\r\\n- 废弃样式相关属性 `size`、`shape`、`ghost`，可以通过 css 变量方式更改样式。\\r\\n\\r\\n```diff\\r\\n  <Checkbox.Group\\r\\n-   type=\\\"cell\\\"\\r\\n-   size=\\\"md\\\"\\r\\n-   shape=\\\"round\\\"\\r\\n-   ghost\\r\\n+   type=\\\"list\\\"\\r\\n  />\\r\\n\\r\\n  <Radio.Group\\r\\n-   type=\\\"cell\\\"\\r\\n-   size=\\\"md\\\"\\r\\n-   shape=\\\"round\\\"\\r\\n-   ghost\\r\\n+   type=\\\"list\\\"\\r\\n  />\\r\\n```\\r\\n\\r\\n### Input / SearchBar\\r\\n\\r\\n`onChange` 回调参数调整为 event\\r\\n\\r\\n```diff\\r\\n  <Input\\r\\n-   onChange={(value) => console.log(value)}\\r\\n+   onChange={(event) => console.log(event.target.value)}\\r\\n  />\\r\\n\\r\\n  <SearchBar\\r\\n-   onChange={(value) => console.log(value)}\\r\\n+   onChange={(event) => console.log(event.target.value)}\\r\\n  />\\r\\n```\\r\\n\\r\\n### Modal\\r\\n\\r\\n`animationType` 属性值调整为 kebab case 命名\\r\\n\\r\\n- `moveUp` 调整为 `move-up`\\r\\n- `moveDown` 调整为 `move-down`\\r\\n- `moveLeft` 调整为 `move-left`\\r\\n- `moveRight` 调整为 `move-right`\\r\\n- `slideUp` 调整为 `slide-up`\\r\\n- `slideDown` 调整为 `slide-down`\\r\\n- `slideLeft` 调整为 `slide-left`\\r\\n- `slideRight` 调整为 `slide-right`\\r\\n\\r\\n### Popper\\r\\n\\r\\n`animationType` 和 `direction` 属性值调整为 kebab case 命名\\r\\n\\r\\n- animationType\\r\\n  - `zoomFade` 调整为 `zoom-fade`\\r\\n  - `menuSlide` 调整为 `menu-slide`\\r\\n  - `moveUp` 调整为 `move-up`\\r\\n  - `moveDown` 调整为 `move-down`\\r\\n  - `moveLeft` 调整为 `move-left`\\r\\n  - `moveRight` 调整为 `move-right`\\r\\n  - `slideUp` 调整为 `slide-up`\\r\\n  - `slideDown` 调整为 `slide-down`\\r\\n  - `slideLeft` 调整为 `slide-left`\\r\\n  - `slideRight` 调整为 `slide-right`\\r\\n- direction\\r\\n  - `topLeft` 调整为 `top-left`\\r\\n  - `topRight` 调整为 `top-right`\\r\\n  - `rightTop` 调整为 `right-top`\\r\\n  - `rightBottom` 调整为 `right-bottom`\\r\\n  - `bottomLeft` 调整为 `bottom-left`\\r\\n  - `bottomRight` 调整为 `bottom-right`\\r\\n  - `leftTop` 调整为 `left-top`\\r\\n  - `leftBottom` 调整为 `left-bottom`\\r\\n\\r\\n### SwipeAction\\r\\n\\r\\n操作项配置 API `left` 变更为 `leftActions`，`right` 变更为 `rightActions`，配置对象继承 Button 组件部分属性\\r\\n\\r\\n```diff\\r\\n  <SwipeAction\\r\\n-   right={[\\r\\n-     <Button size=\\\"lg\\\" shape=\\\"rect\\\" theme=\\\"primary\\\" onClick={() => console.log('右按钮')}>\\r\\n-       右按钮\\r\\n-     </Button>\\r\\n-   ]}\\r\\n+   rightActions={[\\r\\n+     {\\r\\n+       text: '右按钮',\\r\\n+       theme: 'primary',\\r\\n+       onClick: () => console.log('右按钮'),\\r\\n+     }\\r\\n+   ]}\\r\\n  />\\r\\n```\\r\\n\\r\\n### Toast\\r\\n\\r\\n停留时间属性 `stayTime` 调整为 `duration`\\r\\n\\r\\n```diff\\r\\n  Toast.show({\\r\\n    content: '提交成功',\\r\\n-   stayTime: 2000,\\r\\n+   duration: 2000,\\r\\n  });\\r\\n```\\r\\n\\r\\n### Badge\\r\\n\\r\\n`theme` 移除，调整为 `css` 变量 `--color` 设置颜色\\r\\n\\r\\n```diff\\r\\n  <Badge\\r\\n    shape=\\\"radius\\\"\\r\\n    text=\\\"new\\\"\\r\\n-   theme=\\\"danger\\\"\\r\\n+   style={{ '--color': '#00bc70' }}\\r\\n  />\\r\\n```\\r\\n\\r\\n### Marquee\\r\\n\\r\\n`animationDuration` 和 `animationDelay` 调整为 `speed` 和 `delay`，移除 `loop` 属性\\r\\n\\r\\n```diff\\r\\n  <Marquee\\r\\n-   animationDuration={30000}\\r\\n-   animationDelay={2000}\\r\\n+   speed={30000}\\r\\n+   delay={2000}\\r\\n  >\\r\\n    我从右向左滚动\\r\\n  </Marquee>\\r\\n```\\r\\n\\r\\n### SearchBar\\r\\n\\r\\n取消按钮调整为默认不展示，通过设置 `showCancel` 展示按钮\\r\\n\\r\\n```diff\\r\\n  <SearchBar\\r\\n+   showCancel\\r\\n  />\\r\\n```\\r\\n\\r\\n### DatePicker/DatePicker/DateSelect\\r\\n\\r\\n`value` / `defaultValue` / `min` / `max` 参数类型调整为 `Date`\\r\\n\\r\\n```diff\\r\\n  <DatePickerView\\r\\n-   value='2023-02-08'\\r\\n+   value={new Date('2023/02/08')}\\r\\n  />\\r\\n```\\r\\n\\r\\n移除 `mode` 属性，调整为通过 `columnType` 设置列选择类型\\r\\n\\r\\n```diff\\r\\n  <DatePickerView\\r\\n-   mode=\\\"time\\\"\\r\\n+   columnType={['hour', 'minute', 'second']}\\r\\n  />\\r\\n```\\r\\n\\r\\n移除 `minuteStep` 属性，通过 `filter` 设置\\r\\n\\r\\n```diff\\r\\n  <DatePickerView\\r\\n    columnType={['hour', 'minute']}\\r\\n-   minuteStep={5}\\r\\n+   filter={(type, { value }) => {\\r\\n+     if (type === 'minute') return value % 5 === 0;\\r\\n+     return true;\\r\\n+   }}\\r\\n  />\\r\\n```\\r\\n\\r\\n- 移除 `format` 属性\\r\\n\\r\\n### Tabbar\\r\\n\\r\\n移除 `visible` 属性\\r\\n\\r\\n```diff\\r\\n  <Tabbar\\r\\n-   visible={false}\\r\\n  />\\r\\n```\\r\\n\\r\\n## 常见问题\\r\\n\\r\\n### 如何在已经使用 Zarm 2.x 的项目中 Zarm 3.0\\r\\n\\r\\n1. 安装 zarm 3.0\\r\\n\\r\\n```bash\\r\\n$ npm install zarm-v3@npm:zarm@next\\r\\n```\\r\\n\\r\\n2. 在 webpack.config.js 使用 babel-plugin-import 按需引入，配置 sass 变量\\r\\n\\r\\n```diff\\r\\n// webpack.config.js\\r\\nmodule.exports = {\\r\\n  module: {\\r\\n    rules: [\\r\\n      {\\r\\n        test: /\\\\.(j|t)sx?$/,\\r\\n        exclude: /node_modules/,\\r\\n        use: [\\r\\n          {\\r\\n            loader: require.resolve('babel-loader'),\\r\\n            options: {\\r\\n              plugins: [\\r\\n+               [\\r\\n+                 'import',\\r\\n+                 {\\r\\n+                   libraryName: 'zarm-v3',\\r\\n+                   libraryDirectory: 'lib',\\r\\n+                   style: true,\\r\\n+                 },\\r\\n+                 'zarm-v3',\\r\\n+               ],\\r\\n              ],\\r\\n            },\\r\\n          },\\r\\n        ],\\r\\n      },\\r\\n      {\\r\\n        test: /\\\\.scss$/,\\r\\n        use: [\\r\\n          {\\r\\n            loader: 'style-loader'\\r\\n          },\\r\\n          {\\r\\n            loader: 'css-loader'\\r\\n          },\\r\\n          {\\r\\n            loader: 'postcss-loader'\\r\\n          },\\r\\n          {\\r\\n            loader: 'sass-loader'\\r\\n+           options: {\\r\\n+             sassOptions: {\\r\\n+               additionalData: '$prefixCls: \\\"za-v3\\\";'\\r\\n+             }\\r\\n+           }\\r\\n          }\\r\\n        ],\\r\\n  },\\r\\n};\\r\\n```\\r\\n\\r\\n3. 配置 ConfigProvider prefixCls\\r\\n\\r\\n```tsx\\r\\nimport * as React from 'react';\\r\\nimport * as ReactDOM from 'react-dom';\\r\\nimport { Button, ConfigProvider } from 'zarm-v3';\\r\\n\\r\\nReactDOM.render(\\r\\n  <ConfigProvider prefixCls=\\\"zarm-v3\\\">\\r\\n    <Button theme=\\\"primary\\\">submit</Button>\\r\\n  </ConfigProvider>,\\r\\n);\\r\\n```\\r\\n\\r\\n## 遇到问题\\r\\n\\r\\n如果您在升级过程中遇到了问题，请到 [GitHub issues](https://github.com/ZhongAnTech/zarm/issues) 进行反馈。我们会尽快响应和相应改进这篇文档。\\r\\n\";"],"names":[],"sourceRoot":""}
"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7944],{87944:function(r,n,e){e.r(n),n.default="# Grid 宫格\r\n\r\n## 基本用法\r\n\r\n```tsx\r\nimport { Grid } from 'zarm';\r\n\r\nReactDOM.render(\r\n  <Grid>\r\n    {Array.from(Array(6).keys()).map((_, i) => (\r\n      <Grid.Item key={i}>\r\n        <div className=\"block\">内容{i + 1}</div>\r\n      </Grid.Item>\r\n    ))}\r\n  </Grid>,\r\n  mountNode,\r\n);\r\n```\r\n\r\n## 可点击的\r\n\r\n```tsx\r\nimport { Grid } from 'zarm';\r\n\r\nReactDOM.render(\r\n  <Grid>\r\n    {Array.from(Array(6).keys()).map((_, i) => (\r\n      <Grid.Item key={i} onClick={() => console.log(i)}>\r\n        <div className=\"block\">内容{i + 1}</div>\r\n      </Grid.Item>\r\n    ))}\r\n  </Grid>,\r\n  mountNode,\r\n);\r\n```\r\n\r\n## 自定义列数\r\n\r\n```tsx\r\nimport { Grid } from 'zarm';\r\n\r\nconst Demo = () => {\r\n  return (\r\n    <Grid columns={4}>\r\n      {Array.from(Array(6).keys()).map((_, i) => (\r\n        <Grid.Item key={i}>\r\n          <div className=\"block\">内容{i + 1}</div>\r\n        </Grid.Item>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## 自定义间距\r\n\r\n```tsx\r\nimport { Grid } from 'zarm';\r\n\r\nconst Demo = () => {\r\n  return (\r\n    <Grid gutter={[10, 16]}>\r\n      {Array.from(Array(6).keys()).map((_, i) => (\r\n        <Grid.Item key={i}>\r\n          <div className=\"block\">内容{i + 1}</div>\r\n        </Grid.Item>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## 正方形格子\r\n\r\n```tsx\r\nimport { Grid } from 'zarm';\r\n\r\nconst Demo = () => {\r\n  return (\r\n    <Grid square>\r\n      {Array.from(Array(6).keys()).map((_, i) => (\r\n        <Grid.Item key={i}>\r\n          <div className=\"block\">内容{i + 1}</div>\r\n        </Grid.Item>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## API\r\n\r\n| 属性     | 类型               | 默认值 | 说明                                                 |\r\n| :------- | :----------------- | :----- | :--------------------------------------------------- |\r\n| columns  | number             | 3      | 列数                                                 |\r\n| gutter   | number \\| number[] | 0      | 格子之间的间距，数组类型时表示：[上下间距, 左右间距] |\r\n| bordered | boolean            | true   | 是否显示边框                                         |\r\n| square   | boolean            | false  | 是否将格子固定为正方形 (设置正方形会导致间距失效)    |\r\n\r\n## CSS 变量\r\n\r\n| 属性                     | 默认值                        | 说明                 |\r\n| :----------------------- | :---------------------------- | :------------------- |\r\n| --border-color           | 'var(--za-border-color)'      | 格子边框颜色         |\r\n| --item-background        | 'var(--za-background-color)'  | 格子背景         |\r\n| --item-active-background | 'var(--za-background-active)' | 格子点击反馈背景颜色 |\r\n"}}]);
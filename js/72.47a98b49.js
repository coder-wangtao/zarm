"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[72],{80072:function(r,n,e){e.r(n),n.default="# NoticeBar 通告栏\r\n\r\n## 基本用法\r\n\r\n```jsx\r\nimport { NoticeBar } from 'zarm';\r\nimport { CloseCircle } from '@zarm-design/icons';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <NoticeBar>普通</NoticeBar>\r\n    <NoticeBar theme=\"danger\">自定义主题</NoticeBar>\r\n    <NoticeBar icon={<CloseCircle />}>自定义图标</NoticeBar>\r\n    <NoticeBar>\r\n      各位zarmer请注意，当前文本超出了屏幕宽度，组件会自动开启滚动功能，前后停留时间和滚动速度可以自定义设置，更多用法请参见使用文档。\r\n    </NoticeBar>\r\n  </>,\r\n  mountNode,\r\n);\r\n```\r\n\r\n## 三种样式\r\n\r\n```jsx\r\nimport { NoticeBar } from 'zarm';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <NoticeBar theme=\"primary\">主要</NoticeBar>\r\n    <NoticeBar theme=\"success\">成功</NoticeBar>\r\n    <NoticeBar theme=\"warning\">警告</NoticeBar>\r\n    <NoticeBar theme=\"danger\">错误</NoticeBar>\r\n  </>,\r\n  mountNode,\r\n);\r\n```\r\n\r\n## 特定场景\r\n\r\n```jsx\r\nimport { NoticeBar } from 'zarm';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <NoticeBar hasArrow onClick={() => alert('click this notice!')}>\r\n      链接样式的\r\n    </NoticeBar>\r\n    <NoticeBar closable>可关闭的</NoticeBar>\r\n    <NoticeBar closable onClose={() => alert('notice closed')}>\r\n      关闭并触发回调函数\r\n    </NoticeBar>\r\n  </>,\r\n  mountNode,\r\n);\r\n```\r\n\r\n## API\r\n\r\n| 属性     | 类型                                             | 默认值    | 说明                                                   |\r\n| :------- | :----------------------------------------------- | :-------- | :----------------------------------------------------- |\r\n| theme    | string                                           | 'warning' | 主题，可选值 `primary`、`success`、`warning`、`danger` |\r\n| icon     | ReactNode                                        | -         | 设置图标                                               |\r\n| closable | boolean                                          | false     | 是否显示关闭按钮                                       |\r\n| hasArrow | boolean                                          | false     | 是否显示箭头                                           |\r\n| speed    | number                                           | 50        | 滚动时的速度（单位：px/s）                             |\r\n| delay    | number                                           | 2000      | 开启滚动功能时前后停留的时间（单位：ms）               |\r\n| onClick  | () => void                                       | -         | 点击后触发的回调函数                                   |\r\n| onClose  | (event: React.MouseEvent\\<HTMLElement\\>) => void | -         | 点击关闭 icon 触发的回调函数                           |\r\n\r\n## CSS 变量\r\n\r\n| 属性        | 默认值                   | 说明           |\r\n| :---------- | :----------------------- | :------------- |\r\n| --height    | '40px'                   | 通告栏高度     |\r\n| --padding   | '8px 12px'               | 通告栏内间距   |\r\n| --font-size | 'var(--za-font-size-sm)' | 消息框文字大小 |\r\n| --icon-size | '16px'                   | 消息框图标大小 |\r\n"}}]);
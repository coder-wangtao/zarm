"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3478],{43478:function(n,e,r){r.r(e),e.default="# useLongPress 长按\r\n\r\n## 基本用法\r\n\r\n```jsx\r\nimport { useState } from 'react';\r\nimport { useLongPress, Button, List } from 'zarm';\r\n\r\nconst Demo = () => {\r\n  const [text, setText] = useState('');\r\n  const longPressEvent = useLongPress({\r\n    onLongPress: () => setText('长按了'),\r\n    onPress: () => setText('单击了'),\r\n    onClear: () => setText('松开了'),\r\n  });\r\n\r\n  return (\r\n    <List>\r\n      <List.Item\r\n        title={text}\r\n        suffix={\r\n          <Button size=\"sm\" style={{ margin: 10 }} {...longPressEvent}>\r\n            长按我试试？\r\n          </Button>\r\n        }\r\n      />\r\n    </List>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Demo />, mountNode);\r\n```\r\n\r\n## API\r\n\r\n| 属性             | 类型                              | 默认值 | 说明                           |\r\n| :--------------- | :-------------------------------- | :----- | :----------------------------- |\r\n| isPreventDefault | boolean                           | true   | 是否阻止元素发生默认的行为     |\r\n| delay            | number                            | 300    | 长按延时执行的时间，单位：毫秒 |\r\n| onLongPress      | (event: TouchEvent \\| MouseEvent) | -      | 长按时触发的事件               |\r\n| onPress          | (event: TouchEvent \\| MouseEvent) | -      | 单击时触发的事件               |\r\n| onClear          | (event: TouchEvent \\| MouseEvent) | -      | 松开时触发的事件               |\r\n"}}]);